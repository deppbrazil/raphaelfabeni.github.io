"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}var Colors=function(){var hold=document.getElementsByTagName("body")[0];var colorButton=document.querySelector("[data-button-colors]");var darkButton=document.querySelector("[data-button-dark]");var lightButton=document.querySelector("[data-button-light]");var cover=document.querySelector("[data-cover]");var buttons=document.querySelectorAll("[data-button]");var themes=[].concat(_toConsumableArray(document.querySelectorAll("[data-theme]")));function init(){bindEvents()}function bindEvents(){colorButton.addEventListener("click",function(){return toggleCoverColor(true)});darkButton.addEventListener("click",function(){return toggleCoverColor(false)});lightButton.addEventListener("click",function(event){controlStatusButtons(event);controlThemes("light");toggleCoverColor(true)});darkButton.addEventListener("click",function(event){controlStatusButtons(event);controlThemes();toggleCoverColor()})}function controlStatusButtons(){buttons.forEach(function(item){return item.classList.remove("is-active")});event.target.classList.add("is-active")}function controlThemes(isLight){if(isLight){hold.classList.add("is-light");themes[0].classList.add("is-active")}else{hold.classList.remove("is-light");themes[0].classList.remove("is-active")}}function toggleCoverColor(condition){if(condition){cover.classList.add("has-color")}else{cover.classList.remove("has-color")}}return{init:init}}();Colors.init();